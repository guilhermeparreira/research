dim(data)
table(data$CANAL)
data.canal <- split(data,data$CANAL)
dim(data.canal[[1]])/30
cod <- rep(1:28, each = 30)
cod <- c(rep(1:28, each = 30), rep(NA, 10))
data.canal[[1]]$cod <- cod
data.new <- data.frame("INSCRITOS" = tapply(data.canal[[1]]$INSCRITOS, data.canal[[1]]$cod, sum),
"VIEWS" = tapply(data.canal[[1]]$VIEWS, data.canal[[1]]$cod, sum))
data.new$MES <- 1:28
data.new$CANAL <- "inventonahora"
dim(data.canal[[2]])/30
cod <- c(rep(1:16, each = 30), rep(NA, 4))
data.canal[[2]]$cod <- cod
data.new2 <- data.frame("INSCRITOS" = tapply(data.canal[[2]]$INSCRITOS, data.canal[[2]]$cod, sum),
"VIEWS" = tapply(data.canal[[2]]$VIEWS, data.canal[[2]]$cod, sum))
data.new2$MES <- 1:16
data.new2$CANAL <- "japa"
dim(data.canal[[3]])/30
cod <- c(rep(1:7, each = 30), rep(NA, 0))
data.canal[[3]]$cod <- cod
data.new3 <- data.frame("INSCRITOS" = tapply(data.canal[[3]]$INSCRITOS, data.canal[[3]]$cod, sum),
"VIEWS" = tapply(data.canal[[3]]$VIEWS, data.canal[[3]]$cod, sum))
data.new3$MES <- 1:7
data.new3$CANAL <- "lucaslira"
dim(data.canal[[4]])/30
cod <- c(rep(1:20, each = 30), rep(NA, 7))
data.canal[[4]]$cod <- cod
data.new4 <- data.frame("INSCRITOS" = tapply(data.canal[[4]]$INSCRITOS, data.canal[[4]]$cod, sum),
"VIEWS" = tapply(data.canal[[4]]$VIEWS, data.canal[[4]]$cod, sum))
data.new4$MES <- 1:20
data.new4$CANAL <- "vocesabia"
data <- rbind(data.new,data.new2,data.new3,data.new4)
xyplot(INSCRITOS ~ MES | CANAL, data = data)
xyplot(VIEWS ~ MES | CANAL, data = data)
# Lendo a base de dados
dados <- read.csv("dataNew.csv", header = TRUE)[,-c(5,6)]
dados$INSCRITOS <- dados$INSCRITOS/100000
dados_canal <- split(dados, dados$CANAL)
dados2 <- rbind(dados_canal[[1]], dados_canal[[4]])
dados2$CANAL <- droplevels(dados2$CANAL)
par(mfrow = c(1,4), mar=c(2.6, 3, 1.2, 0.5), mgp = c(1.6, 0.6, 0))
plot(cumsum(dados_canal[[1]]$INSCRITOS) ~ dados_canal[[1]]$DIAS,
ylab = "Número de inscritos", xlab = "Dias", type = "l")
plot(cumsum(dados_canal[[2]]$INSCRITOS[-c(1:100)]) ~ dados_canal[[2]]$DIAS[-c(1:100)],
ylab = "Número de inscritos", xlab = "Dias", type = "l")
plot(cumsum(dados_canal[[3]]$INSCRITOS) ~ dados_canal[[3]]$DIAS,
ylab = "Número de inscritos", xlab = "Dias", type = "l")
plot(cumsum(dados_canal[[4]]$INSCRITOS) ~ dados_canal[[4]]$DIAS,
ylab = "Número de inscritos", xlab = "Dias", type = "l")
dados_canal <- split(dados, dados$CANAL)
dados_canal[[1]]$y <- cumsum(dados_canal[[1]]$INSCRITOS)
dados_canal[[2]]$y <- cumsum(dados_canal[[2]]$INSCRITOS)
dados_canal[[3]]$y <- cumsum(dados_canal[[3]]$INSCRITOS)
dados_canal[[4]]$y <- cumsum(dados_canal[[4]]$INSCRITOS)
fit1 <- nls(y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados_canal[[1]],
start = list(L = 50, beta=0.1, beta0=800) )
fit2 <- nls(y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados_canal[[4]],
start = list(L = 20, beta=0.1, beta0=300) )
fit2
f_log <- function(DIAS, L, beta, beta0) {
out <- L/(1+ exp(-beta*(DIAS - beta0)))
return(out)
}
DIAS <- 1:800
plot(f_log(DIAS = DIAS, L = 90, beta = 0.01, beta0 = 10) ~ DIAS)
fit1 <- nls(dados_1$Y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados_1, start = list(L = 50, beta=0.1, beta0=800) )
fit1
plot(dados_1$Y ~ dados_1$DIAS, type = "l")
fx <- function(par, Y, x) {
mu <- par[1]/(1+exp(-par[2]*(x-par[3])))
SQ = mean((Y-mu)^2)
return(SQ)
}
fit1 <- optim(par = c(30, 0.01, 630), fn = fx, Y = dados_1$Y, x = dados_1$DIAS,
method = "BFGS")
plot(dados_1$Y ~ dados_1$DIAS, type = "l", xlim = c(0, 1200), ylim = c(0, 25))
plot(dados_1$Y ~ dados_1$DIAS, type = "l", xlim = c(0, 1200), ylim = c(0, 25))
# Lendo a base de dados
dados <- read.csv("dataNew.csv", header = TRUE)[,-c(5,6)]
dados$INSCRITOS <- dados$INSCRITOS/100000
dados_canal <- split(dados, dados$CANAL)
dados2 <- rbind(dados_canal[[1]], dados_canal[[4]])
dados2$CANAL <- droplevels(dados2$CANAL)
head(dados2)
par(mfrow = c(1,4), mar=c(2.6, 3, 1.2, 0.5), mgp = c(1.6, 0.6, 0))
plot(cumsum(dados_canal[[1]]$INSCRITOS) ~ dados_canal[[1]]$DIAS,
ylab = "Número de inscritos", xlab = "Dias", type = "l")
plot(cumsum(dados_canal[[2]]$INSCRITOS[-c(1:100)]) ~ dados_canal[[2]]$DIAS[-c(1:100)],
ylab = "Número de inscritos", xlab = "Dias", type = "l")
plot(cumsum(dados_canal[[3]]$INSCRITOS) ~ dados_canal[[3]]$DIAS,
ylab = "Número de inscritos", xlab = "Dias", type = "l")
plot(cumsum(dados_canal[[4]]$INSCRITOS) ~ dados_canal[[4]]$DIAS,
ylab = "Número de inscritos", xlab = "Dias", type = "l")
dados_canal <- split(dados, dados$CANAL)
dados_canal[[1]]$y <- cumsum(dados_canal[[1]]$INSCRITOS)
dados_canal[[2]]$y <- cumsum(dados_canal[[2]]$INSCRITOS)
dados_canal[[3]]$y <- cumsum(dados_canal[[3]]$INSCRITOS)
dados_canal[[4]]$y <- cumsum(dados_canal[[4]]$INSCRITOS)
fit1 <- nls(y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados_canal[[1]],
start = list(L = 50, beta=0.1, beta0=800) )
fit2 <- nls(y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados_canal[[4]],
start = list(L = 20, beta=0.1, beta0=300) )
fit2
f_log <- function(DIAS, L, beta, beta0) {
out <- L/(1+ exp(-beta*(DIAS - beta0)))
return(out)
}
DIAS <- 1:800
plot(f_log(DIAS = DIAS, L = 90, beta = 0.01, beta0 = 10) ~ DIAS)
fit1 <- nls(dados_1$Y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados_1, start = list(L = 50, beta=0.1, beta0=800) )
fit1 <- nls(dados_1$Y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados[[1]], start = list(L = 50, beta=0.1, beta0=800) )
fit1 <- nls(dados_1$Y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados_canal[[1]], start = list(L = 50, beta=0.1, beta0=800) )
plot(f_log(DIAS = DIAS, L = 90, beta = 0.01, beta0 = 10) ~ DIAS)
fit1 <- nls(dados_1$Y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados_canal[[1]], start = list(L = 50, beta=0.1, beta0=800) )
plot(dados_1$Y ~ dados_1$DIAS, type = "l")
dados <- read.table("youtube.txt", header = TRUE)
dados_canal <- split(dados, dados$CANAL)
dados1 <- dados_canal[[1]]
dados2 <- dados_canal[[2]]
dados1$INSCRITOS <- dados1$INSCRITOS/100000
dados1$Y <- cumsum(dados1$INSCRITOS)
dados2$INSCRITOS <- dados2$INSCRITOS/100000
dados2$Y <- cumsum(dados2$INSCRITOS)
fit1 <- nls(Y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados1,
start = list(L = 50, beta=0.1, beta0=800) )
fit2 <- nls(Y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados2,
start = list(L = 30, beta=0.1, beta0=300) )
f_log <- function(DIAS, L, beta, beta0) {
out <- L/(1+ exp(-beta*(DIAS - beta0)))
return(out)
}
par(mfrow = c(1,2), mar=c(2.6, 3, 1.2, 0.5), mgp = c(1.6, 0.6, 0))
plot(dados1$Y ~ dados1$DIAS, xlim = c(0, 1215), ylim = c(0, 25),
ylab = "Número de inscritos",
xlab = "Dias", type = "l")
abline(v = 850)
lines(c(1:1215), f_log(DIAS = 1:1215, L = coef(fit1)[1], beta = coef(fit1)[2],
beta0 = coef(fit1)[3]), col = "red")
plot(dados2$Y ~ dados2$DIAS, ylab = "Número de inscritos",
xlab = "Dias", ylim = c(0, 50), xlim = c(0, 980), type = "l")
abline(v = 607)
lines(c(1:972), f_log(DIAS = 1:972, L = coef(fit2)[1], beta = coef(fit2)[2],
beta0 = coef(fit2)[3]), col = "red")
par(mfrow = c(1,2), mar=c(2.6, 3, 1.2, 0.5), mgp = c(1.6, 0.6, 0))
plot(dados1$Y ~ dados1$DIAS, xlim = c(0, 1215), ylim = c(0, 25),
ylab = "Número de inscritos*100000",
xlab = "Dias", type = "l")
plot(dados1$Y ~ dados1$DIAS, xlim = c(0, 1215), ylim = c(0, 25),
ylab = "Número de inscritos*100000",
xlab = "Dias", type = "p")
plot(dados1$Y ~ dados1$DIAS, xlim = c(0, 1215), ylim = c(0, 25),
ylab = "Número de inscritos*100000",
xlab = "Dias", type = "o")
plot(dados1$Y ~ dados1$DIAS, xlim = c(0, 1215), ylim = c(0, 25),
ylab = "Número de inscritos*100000",
xlab = "Dias", type = "o", cex = 0.1)
par(mfrow = c(1,2), mar=c(2.6, 3, 1.2, 0.5), mgp = c(1.6, 0.6, 0))
plot(dados1$Y ~ dados1$DIAS, xlim = c(0, 1215), ylim = c(0, 25),
ylab = "Número de inscritos*100000",
xlab = "Dias", type = "o", cex = 0.1)
plot(dados2$Y ~ dados2$DIAS, ylab = "Número de inscritos*100000",
xlab = "Dias", ylim = c(0, 50), xlim = c(0, 980), type = "p", cex = 0.1)
par(mfrow = c(1,2), mar=c(2.6, 3, 1.2, 0.5), mgp = c(1.6, 0.6, 0))
plot(dados1$Y ~ dados1$DIAS, xlim = c(0, 1215), ylim = c(0, 25),
ylab = "Número de inscritos*100000", main = "Canal 1",
xlab = "Dias", type = "o", cex = 0.1)
plot(dados2$Y ~ dados2$DIAS, ylab = "Número de inscritos*100000", main = "Canal 2",
xlab = "Dias", ylim = c(0, 50), xlim = c(0, 980), type = "p", cex = 0.1)
# Lendo a base de dados
dados <- read.csv("dataNew.csv", header = TRUE)[,-c(5,6)]
dados$INSCRITOS <- dados$INSCRITOS/100000
dados_canal <- split(dados, dados$CANAL)
dados2 <- rbind(dados_canal[[1]], dados_canal[[4]])
dados2$CANAL <- droplevels(dados2$CANAL)
head(dados2)
par(mfrow = c(1,4), mar=c(2.6, 3, 1.2, 0.5), mgp = c(1.6, 0.6, 0))
plot(cumsum(dados_canal[[1]]$INSCRITOS) ~ dados_canal[[1]]$DIAS,
ylab = "Número de inscritos", xlab = "Dias", type = "l")
plot(cumsum(dados_canal[[2]]$INSCRITOS[-c(1:100)]) ~ dados_canal[[2]]$DIAS[-c(1:100)],
ylab = "Número de inscritos", xlab = "Dias", type = "l")
plot(cumsum(dados_canal[[3]]$INSCRITOS) ~ dados_canal[[3]]$DIAS,
ylab = "Número de inscritos", xlab = "Dias", type = "l")
plot(cumsum(dados_canal[[4]]$INSCRITOS) ~ dados_canal[[4]]$DIAS,
ylab = "Número de inscritos", xlab = "Dias", type = "l")
dados_canal <- split(dados, dados$CANAL)
dados_canal[[1]]$y <- cumsum(dados_canal[[1]]$INSCRITOS)
dados_canal[[2]]$y <- cumsum(dados_canal[[2]]$INSCRITOS)
dados_canal[[3]]$y <- cumsum(dados_canal[[3]]$INSCRITOS)
dados_canal[[4]]$y <- cumsum(dados_canal[[4]]$INSCRITOS)
fit1 <- nls(y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados_canal[[1]],
start = list(L = 50, beta=0.1, beta0=800) )
fit2 <- nls(y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados_canal[[4]],
start = list(L = 20, beta=0.1, beta0=300) )
f_log <- function(DIAS, L, beta, beta0) {
out <- L/(1+ exp(-beta*(DIAS - beta0)))
return(out)
}
DIAS <- 1:800
plot(f_log(DIAS = DIAS, L = 90, beta = 0.01, beta0 = 10) ~ DIAS)
fit1 <- nls(dados_1$Y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados_1, start = list(L = 50, beta=0.1, beta0=800) )
fit1
plot(dados_1$Y ~ dados_1$DIAS, type = "l")
fx <- function(par, Y, x) {
mu <- par[1]/(1+exp(-par[2]*(x-par[3])))
SQ = mean((Y-mu)^2)
return(SQ)
}
fit1 <- optim(par = c(30, 0.01, 630), fn = fx, Y = dados_1$Y, x = dados_1$DIAS,
method = "BFGS")
fit1 <- nls(dados_1$Y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados_1, start = list(L = 50, beta=0.1, beta0=800) )
fit1
plot(dados_1$Y ~ dados_1$DIAS, type = "l")
fx <- function(par, Y, x) {
mu <- par[1]/(1+exp(-par[2]*(x-par[3])))
SQ = mean((Y-mu)^2)
return(SQ)
}
fit1 <- optim(par = c(30, 0.01, 630), fn = fx, Y = dados_1$Y, x = dados_1$DIAS,
method = "BFGS")
plot(dados_1$Y ~ dados_1$DIAS, type = "l", xlim = c(0, 1200), ylim = c(0, 25))
lines(c(1:1200), f_log(DIAS = 1:1200, L = fit1$par[1], beta = fit1$par[2],
beta0 = fit1$par[3]), col = "red")
## Youtube inscritos -------------------------------------------------
## Canais de sucesso -------------------------------------------------
setwd('/home/guilherme/Documents/Mathbasics_Monitor/Youtube')
# Lendo a base de dados
dados <- read.csv("dataNew.csv", header = TRUE)[,-c(5,6)]
dados$INSCRITOS <- dados$INSCRITOS/100000
dados
dados_canal <- split(dados, dados$CANAL)
dados2 <- rbind(dados_canal[[1]], dados_canal[[4]])
dados2$CANAL <- droplevels(dados2$CANAL)
dados2
tail(dados2)
write.table(dados2, file = "youtube.txt")
head(dados2)
par(mfrow = c(1,4), mar=c(2.6, 3, 1.2, 0.5), mgp = c(1.6, 0.6, 0))
plot(cumsum(dados_canal[[1]]$INSCRITOS) ~ dados_canal[[1]]$DIAS,
ylab = "Número de inscritos", xlab = "Dias", type = "l")
plot(cumsum(dados_canal[[2]]$INSCRITOS[-c(1:100)]) ~ dados_canal[[2]]$DIAS[-c(1:100)],
ylab = "Número de inscritos", xlab = "Dias", type = "l")
plot(cumsum(dados_canal[[3]]$INSCRITOS) ~ dados_canal[[3]]$DIAS,
ylab = "Número de inscritos", xlab = "Dias", type = "l")
plot(cumsum(dados_canal[[4]]$INSCRITOS) ~ dados_canal[[4]]$DIAS,
ylab = "Número de inscritos", xlab = "Dias", type = "l")
dados_canal <- split(dados, dados$CANAL)
dados_canal[[1]]$y <- cumsum(dados_canal[[1]]$INSCRITOS)
dados_canal[[2]]$y <- cumsum(dados_canal[[2]]$INSCRITOS)
dados_canal[[3]]$y <- cumsum(dados_canal[[3]]$INSCRITOS)
dados_canal[[4]]$y <- cumsum(dados_canal[[4]]$INSCRITOS)
fit1 <- nls(y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados_canal[[1]],
start = list(L = 50, beta=0.1, beta0=800) )
fit2 <- nls(y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados_canal[[4]],
start = list(L = 20, beta=0.1, beta0=300) )
f_log <- function(DIAS, L, beta, beta0) {
out <- L/(1+ exp(-beta*(DIAS - beta0)))
return(out)
}
DIAS <- 1:800
plot(f_log(DIAS = DIAS, L = 90, beta = 0.01, beta0 = 10) ~ DIAS)
fit2
plot(f_log(DIAS = DIAS, L = 90, beta = 0.01, beta0 = 10) ~ DIAS)
fit1 <- nls(dados_1$Y ~ L/(1+exp(-beta*(DIAS - beta0))),
data = dados_1, start = list(L = 50, beta=0.1, beta0=800) )
fit1
plot(dados_1$Y ~ dados_1$DIAS, type = "l")
fx <- function(par, Y, x) {
mu <- par[1]/(1+exp(-par[2]*(x-par[3])))
SQ = mean((Y-mu)^2)
return(SQ)
}
fit1 <- optim(par = c(30, 0.01, 630), fn = fx, Y = dados_1$Y, x = dados_1$DIAS,
method = "BFGS")
plot(dados_1$Y ~ dados_1$DIAS, type = "l", xlim = c(0, 1200), ylim = c(0, 25))
lines(c(1:1200), f_log(DIAS = 1:1200, L = fit1$par[1], beta = fit1$par[2],
beta0 = fit1$par[3]), col = "red")
fit1 <- optim(par = c(30, 0.01, 630), fn = fx, Y = dados_4$Y, x = dados_1$DIAS,
method = "BFGS")
plot(dados_4$Y ~ dados_1$DIAS, type = "l", xlim = c(0, 1200), ylim = c(0, 25))
lines(c(1:1200), f_log(DIAS = 1:1200, L = fit1$par[1], beta = fit1$par[2],
beta0 = fit1$par[3]), col = "red")
##########################################################################################
## Analysing data from youtube ###########################################################
## Author: Wagner Hugo Bonat LEG/IMADA ###################################################
## Date: 17/04/2016 ######################################################################
##########################################################################################
rm(list=ls())
## Loading the data
data <- read.table("dados.csv", header = TRUE, sep = ",")
head(data)
matriz <- matrix(NA, ncol = 35, nrow=43)
for(i in 1:35){matriz[,i] <- as.numeric(data[i,][3:45])}
nomes <- c()
for(i in 1:35){nomes[i] <- data[i,2]}
nomes2 <- levels(data[1,2])[nomes]
data <- as.data.frame(matriz)
names(data) <- nomes2
data <- data/10000
head(data)
## Plot
X11()
par(mfrow=c(2,5))
for(i in 2:11){
plot(as.numeric(data[,i]) ~ c(1:43), type="l", main = names(data)[i])}
## Loading the data
data <- read.table("dados.csv", header = TRUE, sep = ",")
head(data)
matriz <- matrix(NA, ncol = 35, nrow=43)
for(i in 1:35){matriz[,i] <- as.numeric(data[i,][3:45])}
matriz
nomes <- c()
for(i in 1:35){nomes[i] <- data[i,2]}
nomes2 <- levels(data[1,2])[nomes]
data <- as.data.frame(matriz)
names(data) <- nomes2
data <- data/10000
head(data)
matriz
data <- as.data.frame(matriz)
data
names(data)
nomes2
data[1,2]
data
data <- data/10000
head(data)
## Plot
X11()
par(mfrow=c(2,5))
for(i in 2:11){
plot(as.numeric(data[,i]) ~ c(1:43), type="l", main = names(data)[i])}
par(mfrow=c(2,5))
for(i in 12:21){
plot(as.numeric(data[,i]) ~ c(1:43), type="l", main = names(data)[i])}
par(mfrow=c(2,5))
for(i in 22:31){
plot(as.numeric(data[,i]) ~ c(1:43), type="l", main = names(data)[i])}
par(mfrow=c(2,2))
for(i in 32:35){
plot(as.numeric(data[,i]) ~ c(1:43), type="l", main = names(data)[i])}
y <- c(data[,2],data[,3],data[,4],data[,5],data[,6],data[,7],data[,8],data[,9],data[,10])
cov <- rep(c(1:43),9)
cod <- c(rep(1:9,each=43))
dados <- data.frame("y" = y, "cov" = cov, "cod" = cod)
## Non-linear model
fit1.nlm <- nls(y ~ L/(1 + exp(-beta*(cov - beta0))), data = dados,start = list(L = 1500, beta=2, beta0=20))
fit1.nlm
X11()
plot(data[,2] ~ c(1:43), type = "l", ylim = c(0,8000))
for(i in 3:9){lines(c(1:43),data[,i], col = i)}
lines(predict(fit1.nlm, newdata=data.frame("cov" = 1:43)),lty=2)
## Non-Linear mixed model
require(nlme)
dados.na <- na.exclude(dados)
fit4.nlm <- nlme(y ~ L/(1 + exp(-beta*(cov - beta0))) ,
random= L ~ 1|cod, fixed=L+beta+beta0~1,
data=dados.na, start=c(L=9198, beta=0.23, beta0 = 36.26), method="ML", control = list(maxIter=2000))
fit4.nlm
summary(fit4.nlm)
confint(fit4.nlm)
plot(c(data[,2],rep(NA,17)) ~ c(1:60), type = "l", ylim = c(0,4000), main = names(data)[2])
lines(predict(fit4.nlm, newdata=data.frame("cov" = 1:60, "cod" = 1)),lty=2)
plot(c(data[,3],rep(NA,17)) ~ c(1:60), type = "l", ylim = c(0,28000), main = names(data)[3])
lines(predict(fit4.nlm, newdata=data.frame("cov" = 1:60, "cod" = 2)),lty=2)
plot(c(data[,4],rep(NA,17)) ~ c(1:60), type = "l", ylim = c(0,8000), main = names(data)[4])
lines(predict(fit4.nlm, newdata=data.frame("cov" = 1:60, "cod" = 3)),lty=2)
plot(c(data[,5],rep(NA,17)) ~ c(1:60), type = "l", ylim = c(0,12000), main = names(data)[5])
lines(predict(fit4.nlm, newdata=data.frame("cov" = 1:60, "cod" = 4)),lty=2)
plot(c(data[,6],rep(NA,17)) ~ c(1:60), type = "l", ylim = c(0,8000), main = names(data)[6])
lines(predict(fit4.nlm, newdata=data.frame("cov" = 1:60, "cod" = 5)),lty=2)
plot(c(data[,7],rep(NA,17)) ~ c(1:60), type = "l", ylim = c(0,3500), main = names(data)[7])
lines(predict(fit4.nlm, newdata=data.frame("cov" = 1:60, "cod" = 6)),lty=2)
##########################################################################################
## Youtube example of mixed models #######################################################
## Author: Wagner Hugo Bonat LEG/IMADA ###################################################
## Date: 06/08/2015 ######################################################################
## Lastest updated 06/08/2015 ############################################################
##########################################################################################
rm(list=ls())
## Loading extra package
require(lme4)
require(lattice)
require(nlme)
## Loading data set
data <- read.table("dataNew.csv", header = TRUE, sep = ",")[,1:4]
head(data)
dim(data)
table(data$CANAL)
data.canal <- split(data,data$CANAL)
dim(data.canal[[1]])/30
cod <- rep(1:28, each = 30)
cod <- c(rep(1:28, each = 30), rep(NA, 10))
data.canal[[1]]$cod <- cod
data.new <- data.frame("INSCRITOS" = tapply(data.canal[[1]]$INSCRITOS, data.canal[[1]]$cod, sum),
"VIEWS" = tapply(data.canal[[1]]$VIEWS, data.canal[[1]]$cod, sum))
data.new$MES <- 1:28
data.new$CANAL <- "inventonahora"
dim(data.canal[[2]])/30
cod <- c(rep(1:16, each = 30), rep(NA, 4))
data.canal[[2]]$cod <- cod
data.new2 <- data.frame("INSCRITOS" = tapply(data.canal[[2]]$INSCRITOS, data.canal[[2]]$cod, sum),
"VIEWS" = tapply(data.canal[[2]]$VIEWS, data.canal[[2]]$cod, sum))
data.new2$MES <- 1:16
data.new2$CANAL <- "japa"
dim(data.canal[[3]])/30
cod <- c(rep(1:7, each = 30), rep(NA, 0))
data.canal[[3]]$cod <- cod
data.new3 <- data.frame("INSCRITOS" = tapply(data.canal[[3]]$INSCRITOS, data.canal[[3]]$cod, sum),
"VIEWS" = tapply(data.canal[[3]]$VIEWS, data.canal[[3]]$cod, sum))
data.new3$MES <- 1:7
data.new3$CANAL <- "lucaslira"
dim(data.canal[[4]])/30
cod <- c(rep(1:20, each = 30), rep(NA, 7))
data.canal[[4]]$cod <- cod
data.new4 <- data.frame("INSCRITOS" = tapply(data.canal[[4]]$INSCRITOS, data.canal[[4]]$cod, sum),
"VIEWS" = tapply(data.canal[[4]]$VIEWS, data.canal[[4]]$cod, sum))
data.new4$MES <- 1:20
data.new4$CANAL <- "vocesabia"
data <- rbind(data.new,data.new2,data.new3,data.new4)
xyplot(INSCRITOS ~ MES | CANAL, data = data)
xyplot(VIEWS ~ MES | CANAL, data = data)
xyplot(INSCRITOS ~ MES | CANAL, data = data)
xyplot(VIEWS ~ MES | CANAL, data = data)
data
## Fitting a non-linear models (only fixed effects)
fit1.nlm <- nls(INSCRITOS ~ L/(1 + exp(-beta*(MES - beta0))),
data = data,
start = list(L = 250, beta=0.20, beta0=0.20))
summary(fit1.nlm)
data.canal <- split(data2,data2$CANAL)
plot(data.canal[[1]]$INSCRITOS ~ c(1:dim(data.canal[[1]])[1]), type = "l", ylim = c(0,35000), xlim = c(1, 1500))
lines(c(1:dim(data.canal[[2]])[1]),data.canal[[2]]$INSCRITOS, col = 2)
lines(c(1:dim(data.canal[[4]])[1]),data.canal[[4]]$INSCRITOS, col = 3)
lines(predict(fit1.nlm, newdata=data.frame("DIAS" = 1:1500)),lty=2)
fit1.nlm
## Fitting a non-linear mixed model
fit.nlmm <- nlme(INSCRITOS ~ L/(1 + exp(-beta*(DIAS - beta0))) ,
random= L ~ 1|CANAL, fixed=L+beta+beta0~1,
data = data2, start=c(L=4.82e03, beta=1.137e-02, beta0 = 2.94e02), method="ML", control = list(maxIter=2000))
fit.nlmm
summary(fit.nlmm)
plot(data.canal[[1]]$INSCRITOS ~ c(1:dim(data.canal[[1]])[1]), type = "l", ylim = c(0,35000), xlim = c(1, 1500), ylab = "Inscritos", xlab = "Dias")
lines(c(1:dim(data.canal[[2]])[1]),data.canal[[2]]$INSCRITOS, col = 2)
lines(c(1:dim(data.canal[[4]])[1]),data.canal[[4]]$INSCRITOS, col = 3)
lines(predict(fit.nlmm, newdata=data.frame("DIAS" = 1:1500, "CANAL" = "inventonahora")),lty = 2)
lines(predict(fit.nlmm, newdata=data.frame("DIAS" = 1:1500, "CANAL" = "Japa")),lty = 2, col = 2)
lines(predict(fit.nlmm, newdata=data.frame("DIAS" = 1:1500, "CANAL" = "vocesabia")),lty = 2, col = 3)
lines(predict(fit1.nlm, newdata=data.frame("DIAS" = 1:1500)),lty=3)
## Loading prospective data set
data.prosp <- read.table("dataProspec.csv", header = TRUE, sep = ",")[,1:5]
head(data.prosp)
table(data.prosp$CATEGORIA)
table(data.prosp$CANAL)
## Test 1
data.test1 <- subset(data.prosp, data.prosp$CANAL == "brunamalheirosmakeup")
plot(data.test$INSCRITOS ~ c(1:dim(data.test)[1]), type = "l", ylim = c(0,35000), xlim = c(1, 25), ylab = "Inscritos", xlab = "Dias")
fit.test <- nls(INSCRITOS ~ L/(1 + exp(-beta*(DIAS - beta0))), data = data.test,start = list(L = 5000, beta= 2, beta0=2))
lines(predict(fit.test, newdata=data.frame("DIAS" = 1:1500)),lty=2, lwd = 3)
plot(data.canal[[1]]$INSCRITOS ~ c(1:dim(data.canal[[1]])[1]), type = "l", ylim = c(0,35000), xlim = c(1, 1500))
lines(predict(fit1.nlm, newdata=data.frame("DIAS" = 1:1500)),lty=3)
lines(predict(fit.test, newdata=data.frame("DIAS" = 1:1500)),lty=2, lwd = 3)
## Test 2
## Fitting a non-linear mixed model
data.aug <- rbind(data2, data.test[,1:4])
fit.nlmm <- nlme(INSCRITOS ~ L/(1 + exp(-beta*(DIAS - beta0))) ,
random= L ~ 1|CANAL, fixed=L+beta+beta0~1,
data = data.aug, start=c(L=4.82e03, beta=1.137e-02, beta0 = 2.94e02), method="ML", control = list(maxIter=2000))
fit.nlmm
summary(fit.nlmm)
plot(data.canal[[1]]$INSCRITOS ~ c(1:dim(data.canal[[1]])[1]), type = "l", ylim = c(0,35000), xlim = c(1, 1500), ylab = "Inscritos", xlab = "Dias")
lines(c(1:dim(data.canal[[2]])[1]),data.canal[[2]]$INSCRITOS, col = 2)
lines(c(1:dim(data.canal[[4]])[1]),data.canal[[4]]$INSCRITOS, col = 3)
lines(predict(fit.nlmm, newdata=data.frame("DIAS" = 1:1500, "CANAL" = "inventonahora")),lty = 2)
lines(predict(fit.nlmm, newdata=data.frame("DIAS" = 1:1500, "CANAL" = "Japa")),lty = 2, col = 2)
lines(predict(fit.nlmm, newdata=data.frame("DIAS" = 1:1500, "CANAL" = "vocesabia")),lty = 2, col = 3)
lines(predict(fit.nlmm, newdata=data.frame("DIAS" = 1:1500, "CANAL" =  "brunamalheirosmakeup")),lty = 2, col = 4, lwd = 2)
##########################################################################################
xyplot(INSCRITOS ~ DIAS | CANAL, data = data.prosp)
nome <- as.character(unique(factor(data.prosp$CANAL)))
data.test <- data.prosp[which(data.prosp$CANAL == nome[9]),]
dim(data.test)
data.aug <- rbind(data2, data.test[,1:4])
fit.nlmm <- nlme(INSCRITOS ~ L/(1 + exp(-beta*(DIAS - beta0))) ,
random= L ~ 1|CANAL, fixed=L+beta+beta0~1,
data = data.aug, start=c(L=4.82e03, beta=1.137e-02, beta0 = 2.94e02), method="ML", control = list(maxIter=2000))
fit.nlmm
summary(fit.nlmm)
plot(data.canal[[1]]$INSCRITOS ~ c(1:dim(data.canal[[1]])[1]), type = "l", ylim = c(0,55000), xlim = c(1, 1500), ylab = "Inscritos", xlab = "Dias")
lines(c(1:dim(data.canal[[2]])[1]),data.canal[[2]]$INSCRITOS, col = 2)
lines(c(1:dim(data.canal[[4]])[1]),data.canal[[4]]$INSCRITOS, col = 3)
lines(predict(fit.nlmm, newdata=data.frame("DIAS" = 1:1500, "CANAL" = "inventonahora")),lty = 2)
lines(predict(fit.nlmm, newdata=data.frame("DIAS" = 1:1500, "CANAL" = "Japa")),lty = 2, col = 2)
lines(predict(fit.nlmm, newdata=data.frame("DIAS" = 1:1500, "CANAL" = "vocesabia")),lty = 2, col = 3)
lines(predict(fit.nlmm, newdata=data.frame("DIAS" = 1:1500, "CANAL" =  nome[9])),lty = 2, col = 4, lwd = 2)
